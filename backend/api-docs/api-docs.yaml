openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8443
  description: Generated server url
paths:
  /api/v1/users:
    get:
      tags:
      - user-rest-controller
      operationId: getUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserDTO"
    put:
      tags:
      - user-rest-controller
      operationId: editUser
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditUserDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
    delete:
      tags:
      - user-rest-controller
      operationId: deleteUser
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
  /api/v1/users/image:
    get:
      tags:
      - user-rest-controller
      operationId: getUserImage
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
      - user-rest-controller
      operationId: replaceUserImage
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
              required:
              - imageFile
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - user-rest-controller
      operationId: deleteUserImage
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/reviews/{reviewId}/{productId}:
    put:
      tags:
      - review-rest-controller
      operationId: replaceReview
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: reviewId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewReviewRequestDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewDTO"
    delete:
      tags:
      - review-rest-controller
      operationId: deleteReview
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: reviewId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewDTO"
  /api/v1/admin/products/{id}:
    put:
      tags:
      - admin-products-rest-controller
      operationId: replaceProduct
      parameters:
      - name: stock_S
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: stock_M
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: stock_L
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: stock_XL
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductDTO"
    delete:
      tags:
      - admin-products-rest-controller
      operationId: deleteProduct
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductDTO"
  /api/v1/admin/products/{id}/image:
    put:
      tags:
      - admin-products-rest-controller
      operationId: replaceProdcutImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
              required:
              - imageFile
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - admin-products-rest-controller
      operationId: createProductImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
              required:
              - imageFile
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - admin-products-rest-controller
      operationId: deleteProductImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/user:
    post:
      tags:
      - register-rest-controller
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewUserDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
  /api/v1/user/image:
    post:
      tags:
      - register-rest-controller
      operationId: createUserImage
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
              required:
              - imageFile
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/reviews/{productId}:
    post:
      tags:
      - review-rest-controller
      operationId: createReview
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewReviewRequestDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewDTO"
  /api/v1/cart/{id}:
    post:
      tags:
      - cart-rest-controller
      operationId: addToCart
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: size
        in: query
        required: true
        schema:
          type: string
      - name: quantity
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrderDTO"
    patch:
      tags:
      - cart-rest-controller
      operationId: removeFromCart
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrderDTO"
  /api/v1/auth/refresh:
    post:
      tags:
      - login-controller
      operationId: refreshToken
      parameters:
      - name: RefreshToken
        in: cookie
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/v1/auth/logout:
    post:
      tags:
      - login-controller
      operationId: logOut
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/v1/auth/login:
    post:
      tags:
      - login-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/v1/admin/products:
    get:
      tags:
      - admin-products-rest-controller
      operationId: getAdminProducts
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
    post:
      tags:
      - admin-products-rest-controller
      operationId: createProduct
      parameters:
      - name: stock_S
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: stock_M
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: stock_L
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: stock_XL
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewProductRequestDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductDTO"
  /api/v1/reviews/{reviewId}:
    patch:
      tags:
      - review-rest-controller
      operationId: reportReview
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: reviewId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewDTO"
  /api/v1/cart:
    get:
      tags:
      - cart-rest-controller
      operationId: getCart
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrderDTO"
    patch:
      tags:
      - cart-rest-controller
      operationId: proccess
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrderDTO"
  /api/v1/admin/users/{id}/unbanned:
    patch:
      tags:
      - admin-users-rest-controller
      operationId: unbanUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
  /api/v1/admin/users/{id}/banned:
    patch:
      tags:
      - admin-users-rest-controller
      operationId: banUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
  /api/v1/users/{id}:
    get:
      tags:
      - user-rest-controller
      operationId: getUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
  /api/v1/users/orders:
    get:
      tags:
      - user-orders-rest-controller
      operationId: getUserOrders
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderDTO"
  /api/v1/users/orders/{id}:
    get:
      tags:
      - user-orders-rest-controller
      operationId: getOrderById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrderDTO"
  /api/v1/users/admin:
    get:
      tags:
      - user-rest-controller
      operationId: getAdmin
      parameters:
      - name: isAdmin
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
  /api/v1/search:
    get:
      tags:
      - search-rest-controller
      operationId: getSearchData
      parameters:
      - name: query
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/reviews/{id}:
    get:
      tags:
      - review-rest-controller
      operationId: getReview
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewDTO"
  /api/v1/reviews/all:
    get:
      tags:
      - review-rest-controller
      operationId: getReviews
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReviewDTO"
  /api/v1/products/{id}:
    get:
      tags:
      - product-detail-rest-controller
      operationId: getProductDetail
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: userId
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductDTO"
  /api/v1/products/{id}/image:
    get:
      tags:
      - product-detail-rest-controller
      operationId: getProductImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/index:
    get:
      tags:
      - index-rest-controller
      operationId: getIndexData
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/category/{category}:
    get:
      tags:
      - category-rest-controller
      operationId: getCategoryData
      parameters:
      - name: category
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/admin/users:
    get:
      tags:
      - admin-users-rest-controller
      operationId: getAdminUsers
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/admin/users/{id}:
    get:
      tags:
      - admin-users-rest-controller
      operationId: getUser_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
  /api/v1/admin/products/out-of-stock:
    get:
      tags:
      - admin-products-rest-controller
      operationId: getOutOfStockProducts
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductDTO"
  /api/v1/admin/orders:
    get:
      tags:
      - admin-orders-rest-controller
      operationId: getAdminOrders
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/admin/charts:
    get:
      tags:
      - admin-charts-rest-controller
      operationId: getChartsData
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
components:
  schemas:
    EditUserDTO:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        address:
          type: string
        currentPassword:
          type: string
        newPassword:
          type: string
        confirmPassword:
          type: string
    UserDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        address:
          type: string
        banned:
          type: boolean
        reports:
          type: integer
          format: int32
        imageUrl:
          type: string
        roles:
          type: array
          items:
            type: string
    NewReviewRequestDTO:
      type: object
      properties:
        rating:
          type: integer
          format: int32
        reviewText:
          type: string
    ReviewDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        user:
          $ref: "#/components/schemas/UserDTO"
        rating:
          type: integer
          format: int32
        reviewText:
          type: string
        reported:
          type: boolean
        own:
          type: boolean
        ratingStars:
          type: array
          items:
            type: boolean
        emptyStars:
          type: array
          items:
            type: boolean
    ProductDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
        stock:
          type: integer
          format: int32
        outOfStock:
          type: boolean
        sold:
          type: integer
          format: int32
        category:
          type: string
        imageBool:
          type: boolean
        imageUrl:
          type: string
        sizes:
          type: array
          items:
            $ref: "#/components/schemas/SizeDTO"
        reviews:
          type: array
          items:
            $ref: "#/components/schemas/ReviewDTO"
    SizeDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        stock:
          type: integer
          format: int32
    NewUserDTO:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        encodedPassword:
          type: string
        confirmPassword:
          type: string
    BasicProductSizeDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
        stock:
          type: integer
          format: int32
        outOfStock:
          type: boolean
        sold:
          type: integer
          format: int32
        category:
          type: string
        imageBool:
          type: boolean
        imageUrl:
          type: string
        sizes:
          type: array
          items:
            $ref: "#/components/schemas/SizeDTO"
    OrderDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        createdAtFormatted:
          type: string
        isPaid:
          type: boolean
        totalPrice:
          type: number
        state:
          type: string
        orderProducts:
          type: array
          items:
            $ref: "#/components/schemas/OrderProductDTO"
    OrderProductDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        product:
          $ref: "#/components/schemas/BasicProductSizeDTO"
        productName:
          type: string
        quantity:
          type: integer
          format: int32
        size:
          type: string
        subtotalPrice:
          type: number
          format: double
    AuthResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - SUCCESS
          - FAILURE
        message:
          type: string
        error:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    NewProductRequestDTO:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
        stock:
          type: integer
          format: int32
        category:
          type: string
        imageBool:
          type: boolean
